function wwt_maker_wavelet_decomp(K,Llx,tf)

    tic
    scl = 1;
    
    tf = 1/scl*tf;
    
    dt = scl*.1; 
    dx = Llx/K;
    n = 8;
    Kmask = K/2;
    KT = 2*K;
    KTT = KT^2;

    f0c = KTT*2.1e-3; 
    nuh = 1/scl*2e-6;
    nul = 0;

    Xmesh = linspace(-Llx,Llx,KT+1);
    Xmesh = Xmesh(1:KT)';
    dreg = 1e-2;
    
    Kl = 4;
    Kh = 6;

    Dds = 1i*pi/Llx*[0:K-1 0 -K+1:-1]'; 
    Dxs = kron(Dds,ones(KT,1));
    Dys = kron(ones(KT,1),Dds);
    
    Dxs2 = Dxs.^2;
    Dys2 = Dys.^2;
        
    Dd = 1i*pi/Llx*[0:K -K+1:-1]';
    Dx = kron(Dd,ones(KT,1));
    Dy = kron(ones(KT,1),Dd);
    
    Dx2 = Dx.^2;
    Dy2 = Dy.^2;
    
    Dhyp = (-(Dx2+Dy2)).^(n);
    iDhyp = 1./Dhyp;
    indsrmv = isinf(iDhyp);
    iDhyp(indsrmv) = 1;
    
    Lap = 1i*(Dxs2+Dys2) - nuh*Dhyp - nul*iDhyp;
    Eop = exp(dt*Lap);

    f0 = zeros(KT^2,1);
    ksq = ( (kron(ones(KT,1),[0:K -K+1:-1]')).^2 + (kron([0:K -K+1:-1]',ones(KT,1))).^2) ;
    indsl = ksq >= Kl^2;
    indsh = ksq <=  Kh^2;
    indsc = logical(indsl.*indsh);
    f0(indsc) = 1;
    f0 = reshape(f0,KT,KT);
    f0 = f0c*f0;
    f0 = fft2(real(ifftshift(ifft2(f0))));
                
    un = zeros(KT^2,1);
    Nsteps = tf/dt;
    NDMD = 10;
    cnt = 1;
    mxlvl = floor(log2(KT))
    fprintf('Total Number of Time Steps: %1.4e \n', Nsteps);
    
    Nstart = floor(.95*Nsteps);
    fprintf('Starting Number of Time Step: %1.4e \n', Nstart);
    
    tscale = dt*(Nsteps-Nstart);
    fprintf("Time scale for sampling is: %1.5f\n\n",tscale)
    ichrnten = zeros(floor((Nsteps-Nstart)/NDMD),1);
    dwtmode('per');
    
    for jj=1:Nsteps
        k1 = dt*nonlin(un,f0,KT);
        k2 = dt*nonlin(Eop.*(un+k1),f0,KT);
        un = Eop.*(un+k1/2) + k2/2;
        if jj >= Nstart
            if mod(jj,NDMD)==0 || jj==Nstart
                ucloc = wavelet_decomp(un);        
                ichrnten(cnt) = norm(ucloc-abs(un))/norm(un);
                cnt = cnt + 1;
            end
        end
    end
    
    ufin = ifft2(reshape(un,KT,KT));
    ucoherfin = wavelet_decomp(ufin);
        
    figure(1)
    surf(Xmesh,Xmesh,abs(ufin),'LineStyle','none')
    h = set(gca,'FontSize',30);
    set(h,'Interpreter','LaTeX')
    xlabel('$x$','Interpreter','LaTeX','FontSize',30)
    ylabel('$y$','Interpreter','LaTeX','FontSize',30)
    
    figure(2)
    surf(Xmesh,Xmesh,ucoherfin,'LineStyle','none')
    h = set(gca,'FontSize',30);
    set(h,'Interpreter','LaTeX')
    xlabel('$x$','Interpreter','LaTeX','FontSize',30)
    ylabel('$y$','Interpreter','LaTeX','FontSize',30)
    
    figure(3)
    surf(Xmesh,Xmesh,abs(ufin)-ucoherfin,'LineStyle','none')
    h = set(gca,'FontSize',30);
    set(h,'Interpreter','LaTeX')
    xlabel('$x$','Interpreter','LaTeX','FontSize',30)
    ylabel('$y$','Interpreter','LaTeX','FontSize',30)
            
    figure(4)
    plot(dt*(Nstart+NDMD*(0:length(ichrnten)-1)),ichrnten,'k-','LineWidth',2)
    toc
end

function uout = nonlin(un,f0,KT)
    uphys = ifft2(reshape(un,KT,KT));
    unl = -1i*fft2(uphys.*uphys.*conj(uphys));
    phi = exp(-1i*2*pi*rand);
    unl = unl + phi*f0;    
    uout = unl(:);
end

function [krad,kavg] = mat_avg(M,K)
    KT = 2*K;    
    krad = (1:K)';
    kavg = M(K,K+1:KT)';    
end
